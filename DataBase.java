import java.sql.* ;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author PRAJWAL P CHURI
 */
public class DataBase extends javax.swing.JFrame {

    /**
     * Creates new form DataBase
     */
    public DataBase() {
        initComponents();
        this.setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cdb.png"))); // NOI18N
        jButton2.setText("CREATE DATABASE");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 120, 210, 50));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 300));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       try
       {
          Class.forName("java.sql.Driver");
          Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/","root","root");
          Statement stmt=con.createStatement();
          String q1="CREATE DATABASE ESM";
          String q2="USE ESM";
          String q3="CREATE TABLE MANAGER(MGR_ID VARCHAR(6) PRIMARY KEY, NAME VARCHAR(50) NOT NULL, PHONE_NO LONG, EMAIL VARCHAR(30), SEX CHAR(1) NOT NULL, CITY VARCHAR(30), SALARY FLOAT(9,2) );";
          String q4="CREATE TABLE STAFF(STAFF_ID VARCHAR(6) PRIMARY KEY, NAME VARCHAR(50) NOT NULL, PHONE_NO LONG, EMAIL VARCHAR(30), SEX CHAR(1) NOT NULL, CITY VARCHAR(30), SALARY FLOAT(9,2) );";
          String q5="CREATE TABLE MGR_LOGIN(MGR_ID VARCHAR(6),PASSWORD VARCHAR(50) ,FOREIGN KEY(MGR_ID) REFERENCES MANAGER(MGR_ID));";
          String q6="CREATE TABLE STAFF_LOGIN(STAFF_ID VARCHAR(6),PASSWORD VARCHAR(50) ,FOREIGN KEY(STAFF_ID) REFERENCES STAFF(STAFF_ID));";
          String q7="CREATE TABLE PRODUCTS(PRODUCT_ID VARCHAR(6) PRIMARY KEY,PRODUCT VARCHAR(50), MODEL VARCHAR(50), CAPACITY VARCHAR(5), COLOR VARCHAR(20), PRICE FLOAT(9,2), QUANTITY INT(3));";
          String q8="CREATE TABLE CART(PRODUCT_ID VARCHAR(6) UNIQUE,QTY INT(2),AMT FLOAT(10,2), FOREIGN KEY(PRODUCT_ID) REFERENCES PRODUCTS(PRODUCT_ID));";
          String q9="CREATE TABLE INV(INV_NO INT(6) PRIMARY KEY, INV_DATE DATE,INV_TIME TIME,NAME VARCHAR(30), ADDRESS text, MOBILE_NO LONG, EMAIL VARCHAR(30) );";
          String q10="CREATE TABLE INV_PD(INV_NO INT(6), PRODUCT_ID VARCHAR(6),QTY INT(2), FOREIGN KEY(INV_NO) REFERENCES INV(INV_NO), FOREIGN KEY(PRODUCT_ID) REFERENCES PRODUCTS(PRODUCT_ID));";
          String q11="INSERT INTO MANAGER VALUES('ADMIN','ADMIN','','','N','','0000');";
          String q12="INSERT INTO STAFF VALUES('ADMIN','ADMIN','','','N','','0000');";
          String q13="INSERT INTO STAFF_LOGIN VALUES('ADMIN','ADMIN');";
          String q14="INSERT INTO MGR_LOGIN VALUES('ADMIN','ADMIN');";
          String q17="CREATE TABLE MS(MGR_ID VARCHAR(6), FOREIGN KEY(MGR_ID) REFERENCES MANAGER(MGR_ID), LT DATETIME);";
          String q18="CREATE TABLE SS(STAFF_ID VARCHAR(6), FOREIGN KEY(STAFF_ID) REFERENCES STAFF(STAFF_ID), LT DATETIME);";
          String q19="CREATE TABLE MGR_SESSION(MGR_ID VARCHAR(6), FOREIGN KEY(MGR_ID) REFERENCES MANAGER(MGR_ID), LOGINTIME DATETIME, LOGOUTTIME DATETIME);";
          String q20="CREATE TABLE STAFF_SESSION(STAFF_ID VARCHAR(6), FOREIGN KEY(STAFF_ID) REFERENCES STAFF(STAFF_ID), LOGINTIME DATETIME, LOGOUTTIME DATETIME);";
          String t1="CREATE TRIGGER `MST` AFTER INSERT ON `ms` FOR EACH ROW INSERT INTO MGR_SESSION(MGR_ID, LOGINTIME) VALUES(NEW.MGR_ID, NEW.LT);";
          String t2="CREATE TRIGGER `MST1` AFTER DELETE ON `ms` FOR EACH ROW UPDATE mgr_session set logouttime=now() where mgr_id=old.mgr_id and logintime=old.lt;";
          String t3="CREATE TRIGGER `SST` AFTER INSERT ON `ss` FOR EACH ROW INSERT INTO STAFF_SESSION(STAFF_ID, LOGINTIME) VALUES(NEW.STAFF_ID, NEW.LT);";
          String t4="CREATE TRIGGER `SST1` AFTER DELETE ON `ss` FOR EACH ROW UPDATE staff_session set logouttime=now() where staff_id=old.staff_id and logintime=old.lt";
          stmt.executeUpdate(q1);   stmt.executeUpdate(q2);   stmt.executeUpdate(q3);   stmt.executeUpdate(q4);  
          stmt.executeUpdate(q5);   stmt.executeUpdate(q6);   stmt.executeUpdate(q7);   stmt.executeUpdate(q8);
          stmt.executeUpdate(q9);   stmt.executeUpdate(q10);  stmt.executeUpdate(q11);  stmt.executeUpdate(q12);
          stmt.executeUpdate(q13);  stmt.executeUpdate(q14);  stmt.executeUpdate(q17);  stmt.executeUpdate(q18);
          stmt.executeUpdate(q19);  stmt.executeUpdate(q20);
          stmt.execute(t1);   stmt.execute(t2);  stmt.execute(t3);  stmt.execute(t4);
          JOptionPane.showMessageDialog(null, "DATABASE CREATED SUCCESSFULLY");
       }
       catch(Exception e)
       {
           JOptionPane.showMessageDialog(null, e);
       }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DataBase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DataBase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DataBase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DataBase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DataBase().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
